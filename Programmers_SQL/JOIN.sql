-- 없어진 기록 찾기
SELECT ANIMAL_OUTS.ANIMAL_ID, ANIMAL_OUTS.NAME FROM ANIMAL_OUTS
LEFT OUTER JOIN ANIMAL_INS ON ANIMAL_OUTS.ANIMAL_ID = ANIMAL_INS.ANIMAL_ID
WHERE ANIMAL_INS.ANIMAL_ID IS NULL ORDER BY ANIMAL_OUTS.ANIMAL_ID ASC;

-- 있었는데요 없었습니다
-- 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문
SELECT ANIMAL_INS.ANIMAL_ID, ANIMAL_INS.NAME FROM ANIMAL_INS
INNER JOIN ANIMAL_OUTS ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_INS.DATETIME > ANIMAL_OUTS.DATETIME
ORDER BY ANIMAL_INS.DATETIME ASC;

-- 오랜 기간 보호한 동물(1)
-- 입양을 간 동물 : ANIMAL_OUTS, 입양을 못 간 동물 : ANIMAL_INS
-- 입양을 가지 못한 동물만 출력해야 하므로 LEFT OUTER JOIN 사용
SELECT ANIMAL_INS.NAME, ANIMAL_INS.DATETIME FROM ANIMAL_INS
LEFT OUTER JOIN ANIMAL_OUTS ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_OUTS.ANIMAL_ID IS NULL ORDER BY ANIMAL_INS.DATETIME ASC LIMIT 3;

-- 보호소에서 중성화한 동물
-- ANIMAL_INS : 동물 보호소에 들어온 동물의 정보
-- ANIMAL_OUTS : 동물 보호소에서 입양 보낸 동물의 정보
-- 보호소에 들어올 당시에는 중성화되지 않았지만, 보호소를 나갈 당시에는 중성화(Spayed)된 동물
SELECT DISTINCT I.ANIMAL_ID, I.ANIMAL_TYPE, I.NAME FROM
(SELECT ANIMAL_ID, ANIMAL_TYPE, NAME, SEX_UPON_INTAKE FROM ANIMAL_INS WHERE SEX_UPON_INTAKE LIKE '%Intact%') AS I JOIN
(SELECT ANIMAL_ID, ANIMAL_TYPE, NAME, SEX_UPON_OUTCOME FROM ANIMAL_OUTS WHERE SEX_UPON_OUTCOME LIKE '%Spayed%' OR SEX_UPON_OUTCOME LIKE '%Neutered%') AS O
WHERE I.ANIMAL_ID = O.ANIMAL_ID
ORDER BY I.ANIMAL_ID ASC;
-- 다른 풀이 : INNER JOIN
SELECT I.ANIMAL_ID, I.ANIMAL_TYPE, I.NAME
FROM ANIMAL_INS AS I INNER JOIN ANIMAL_OUTS AS O ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE NOT I.SEX_UPON_INTAKE = O.SEX_UPON_OUTCOME
ORDER BY I.ANIMAL_ID ASC;

-- 우유와 요거트가 담긴 장바구니
-- 우유와 요거트를 동시에 구입한 장바구니의 아이디 찾기
-- 서브 쿼리를 사용하여 같은 테이블 JOIN 하기
SELECT A.CART_ID FROM
(SELECT CART_ID FROM CART_PRODUCTS WHERE NAME = 'Milk') AS A JOIN
(SELECT CART_ID FROM CART_PRODUCTS WHERE NAME = 'Yogurt') AS B
WHERE A.CART_ID = B.CART_ID ORDER BY A.CART_ID
-- 하나의 테이블 : 셀프조인 사용하기
SELECT A.CART_ID FROM CART_PRODUCTS A JOIN CART_PRODUCTS B
WHERE A.CART_ID = B.CART_ID AND (A.NAME ='Milk' AND B.NAME ='Yogurt')
ORDER BY A.CART_ID
